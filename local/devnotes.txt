Feature plan / to do
--------------------
- debug and shell don't mix well
- wall clock time too in profiler?
- ReadConsole seems to have a hard limit in the number of characters that can
  be read (1022). The warning and truncation happens when a line is longer than
  1022 characters, not when the bufsize is longer than 1024. This is being fixed
  in R 4.4.2. Once that has happened, I will need to make the bufsize larger to
  accommodate this.
- Finish documenting profiler (e.g. profiler object in lua_profile) and
  add flame graph thing
- Dump bytecode from debugger?
- Add lua_load(code, file, L) to turn code/file into bytecode using LuaJIT,
  which I guess could use lua_dump...
- Improve and document using Lua C API from an R package
- Make sure all API functions can handle NAs, wrong types, etc.
- For luajr.list:
    v("/list/order", ord) -- reorder elements (like data.table)
- Make thread safe, perhaps by locking on any R operations from within Lua

- Mode where name suffix determines type, e.g. xs xb x1, or x_s, x_b, x_1? Or
a preprocessor with specified types? (meaning, can declare a lua func as
function(x:integer, y:numeric_r) etc)
- Once there is something to cite, usethis::use_citation()
- Do typedefs for underlying R logical, integer, numeric types?
- There could be a 'debug mode' which does bounds checking on luajr types?


luajit as subfolder in src/luajit
---------------------------------

I tried doing this with git subtree, explained here:

https://blog.developer.atlassian.com/the-power-of-git-subtree/

but ran into issues. Instead I now pull luajit to its own folder,
and copy everything except .git to luajr/src.


Warnings when making luajit
---------------------------

Having -march=native in CFLAGS causes a warning about an uninitialized fs.len
to be emitted when compiling ljamalg.o. Having looked at the offending source,
it's not a real issue.
