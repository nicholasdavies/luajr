// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/luajr_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// luajr_open
SEXP luajr_open();
RcppExport SEXP _luajr_luajr_open() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(luajr_open());
    return rcpp_result_gen;
END_RCPP
}
// luajr_run
SEXP luajr_run(const char* code, int mode, SEXP Lxp);
RcppExport SEXP _luajr_luajr_run(SEXP codeSEXP, SEXP modeSEXP, SEXP LxpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type code(codeSEXP);
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Lxp(LxpSEXP);
    rcpp_result_gen = Rcpp::wrap(luajr_run(code, mode, Lxp));
    return rcpp_result_gen;
END_RCPP
}
// luajr_func_create
SEXP luajr_func_create(const char* code, SEXP Lxp);
RcppExport SEXP _luajr_luajr_func_create(SEXP codeSEXP, SEXP LxpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type code(codeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Lxp(LxpSEXP);
    rcpp_result_gen = Rcpp::wrap(luajr_func_create(code, Lxp));
    return rcpp_result_gen;
END_RCPP
}
// luajr_func_call
SEXP luajr_func_call(Rcpp::XPtr<RegistryEntry> fptr, Rcpp::List alist, const char* acode, SEXP Lxp);
RcppExport SEXP _luajr_luajr_func_call(SEXP fptrSEXP, SEXP alistSEXP, SEXP acodeSEXP, SEXP LxpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<RegistryEntry> >::type fptr(fptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type alist(alistSEXP);
    Rcpp::traits::input_parameter< const char* >::type acode(acodeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Lxp(LxpSEXP);
    rcpp_result_gen = Rcpp::wrap(luajr_func_call(fptr, alist, acode, Lxp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_luajr_luajr_open", (DL_FUNC) &_luajr_luajr_open, 0},
    {"_luajr_luajr_run", (DL_FUNC) &_luajr_luajr_run, 3},
    {"_luajr_luajr_func_create", (DL_FUNC) &_luajr_luajr_func_create, 2},
    {"_luajr_luajr_func_call", (DL_FUNC) &_luajr_luajr_func_call, 4},
    {NULL, NULL, 0}
};

void luajr_init(DllInfo *dll);
RcppExport void R_init_luajr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
    luajr_init(dll);
}
